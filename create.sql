// crear tabla S_ORDERS_CLEAN
CREATE OR REPLACE TABLE S_ORDERS_CLEAN AS
SELECT
  ID_ORDER,
  TRY_TO_DATE(DTE_ORDER) AS DTE_ORDER,
  ID_CUSTOMER,
  ID_PART,
  TRY_TO_NUMBER(QTY_ORDERED) AS QTY_ORDERED,
  TRY_TO_NUMBER(AMT_TOTAL) AS AMT_TOTAL,
  REF_PAYMENT_METHOD,
  TRY_TO_DATE(DTE_DELIVERY_EST) AS DTE_DELIVERY_EST,
  DES_ORDER_NOTE
FROM B_ORDERS_RAW_COMPLEX
WHERE
TRY_TO_DATE(DTE_ORDER) IS NOT NULL
AND TRY_TO_NUMBER(QTY_ORDERED) IS NOT NULL
AND TRY_TO_NUMBER(AMT_TOTAL) IS NOT NULL
AND REF_PAYMENT_METHOD IS NOT NULL
AND TRY_TO_DATE(DTE_DELIVERY_EST) IS NOT NULL;

// CREAR EL SILVER LIMPIO Y TRANSFORMADO
CREATE OR REPLACE TABLE S_CLEANED_TRANSFORMED AS
SELECT
  ID_ORDER,
  TRY_TO_DATE(DTE_ORDER, 'YYYY-MM-DD') AS DTE_ORDER,
  ID_CUSTOMER,
  ID_PART,
  CASE 
    WHEN TRY_TO_NUMBER(QTY_ORDERED) IS NOT NULL AND TRY_TO_NUMBER(QTY_ORDERED) > 0 THEN TRY_TO_NUMBER(QTY_ORDERED)
    ELSE NULL 
  END AS QTY_ORDERED,
  TRY_TO_NUMBER(AMT_TOTAL) AS AMT_TOTAL,
  UPPER(REF_PAYMENT_METHOD) AS REF_PAYMENT_METHOD,
  TRY_TO_DATE(DTE_DELIVERY_EST, 'YYYY-MM-DD') AS DTE_DELIVERY_EST,
  DES_ORDER_NOTE
FROM B_ORDERS_RAW_COMPLEX;

// Crear la tabla de metodos de pago y poblarla
CREATE OR REPLACE TABLE DEV_SQL_LAB.S_SANDBOX.S_PAYMENT_METHODS (
  REF_PAYMENT_METHOD STRING PRIMARY KEY,
  DES_PAYMENT_METHOD STRING
);

INSERT INTO DEV_SQL_LAB.S_SANDBOX.S_PAYMENT_METHODS VALUES
  ('CARD', 'Tarjeta'),
  ('CASH', 'Efectivo'),
  ('TRANSFER', 'Transferencia'),
  ('CRYPTO', 'Criptomoneda');
